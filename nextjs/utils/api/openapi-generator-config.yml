# Description: Sort method arguments to place required parameters before optional parameters.
sortParamsByRequiredFlag: true

# Description: Sort model properties to place required parameters before optional parameters.
sortModelPropertiesByRequiredFlag: true

# Description: Whether to ensure parameter names are unique in an operation (rename parameters that are not).
ensureUniqueParams: true

# Description: boolean, toggles whether unicode identifiers are allowed in names or not, default is false
allowUnicodeIdentifiers: false

# Description: Add form or body parameters to the beginning of the parameter list.
prependFormOrBodyParameters: false

# Description: Suffix that will be appended to all enum names. A special 'v4-compat' value enables the backward-compatible behavior (as pre v4.2.3)
enumNameSuffix: v4-compat

# Description: Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original'
enumPropertyNaming: PascalCase

# Description: Naming convention for the property: 'camelCase', 'PascalCase', 'snake_case' and 'original', which keeps the original name. Only change it if you provide your own run-time code for (de-)serialization of models
modelPropertyNaming: original

# Description: Generate code that conforms to ES6.
supportsES6: false

# Description: The name under which you want to publish generated npm package. Required to generate a full package
# npmName:

# Description: The version of your npm package. If not provided, using the version from the OpenAPI specification file.
npmVersion: 1.0.0

# Description: When setting this property to true, the version will be suffixed with -SNAPSHOT.yyyyMMddHHmm
snapshot: false

# Description: Set to make additional properties types declare that their indexer may return undefined
nullSafeAdditionalProps: false

# Description: Use this property to set an url of your private npmRepo in the package.json
# npmRepository:

# Description: Setting this property to true will generate interfaces next to the default class implementations.
withInterfaces: true

# Description: Put the model and api in separate folders and in separate classes
withSeparateModelsAndApi: true

# Description: Don't prefix enum names with class names
withoutPrefixEnums: true

generateAliasAsModel: true
