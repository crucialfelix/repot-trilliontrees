/* tslint:disable */
/* eslint-disable */
/**
 * Trillion Trees Campaign
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Contribution,
    ContributionFromJSON,
    ContributionFromJSONTyped,
    ContributionToJSON,
    Gift,
    GiftFromJSON,
    GiftFromJSONTyped,
    GiftToJSON,
    UserProfile,
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
} from './';

/**
 * 
 * @export
 * @interface TreeCounter
 */
export interface TreeCounter {
    /**
     * 
     * @type {string}
     * @memberof TreeCounter
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TreeCounter
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof TreeCounter
     */
    slug?: string;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countPlanted?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countPersonal?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countDonated?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countRegistered?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countReceived?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countTarget?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    implicitTarget?: number;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    targetYear?: number;
    /**
     * 
     * @type {string}
     * @memberof TreeCounter
     */
    followerIds?: string;
    /**
     * 
     * @type {UserProfile}
     * @memberof TreeCounter
     */
    userProfile?: UserProfile;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countCommunity?: number;
    /**
     * 
     * @type {Array<Contribution>}
     * @memberof TreeCounter
     */
    contributions?: Array<Contribution>;
    /**
     * 
     * @type {Array<Gift>}
     * @memberof TreeCounter
     */
    gifts?: Array<Gift>;
    /**
     * 
     * @type {number}
     * @memberof TreeCounter
     */
    countProjectDonated?: number;
}

export function TreeCounterFromJSON(json: any): TreeCounter {
    return TreeCounterFromJSONTyped(json, false);
}

export function TreeCounterFromJSONTyped(json: any, ignoreDiscriminator: boolean): TreeCounter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'countPlanted': !exists(json, 'countPlanted') ? undefined : json['countPlanted'],
        'countPersonal': !exists(json, 'countPersonal') ? undefined : json['countPersonal'],
        'countDonated': !exists(json, 'countDonated') ? undefined : json['countDonated'],
        'countRegistered': !exists(json, 'countRegistered') ? undefined : json['countRegistered'],
        'countReceived': !exists(json, 'countReceived') ? undefined : json['countReceived'],
        'countTarget': !exists(json, 'countTarget') ? undefined : json['countTarget'],
        'implicitTarget': !exists(json, 'implicitTarget') ? undefined : json['implicitTarget'],
        'targetYear': !exists(json, 'targetYear') ? undefined : json['targetYear'],
        'followerIds': !exists(json, 'followerIds') ? undefined : json['followerIds'],
        'userProfile': !exists(json, 'userProfile') ? undefined : UserProfileFromJSON(json['userProfile']),
        'countCommunity': !exists(json, 'countCommunity') ? undefined : json['countCommunity'],
        'contributions': !exists(json, 'contributions') ? undefined : ((json['contributions'] as Array<any>).map(ContributionFromJSON)),
        'gifts': !exists(json, 'gifts') ? undefined : ((json['gifts'] as Array<any>).map(GiftFromJSON)),
        'countProjectDonated': !exists(json, 'countProjectDonated') ? undefined : json['countProjectDonated'],
    };
}

export function TreeCounterToJSON(value?: TreeCounter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'displayName': value.displayName,
        'slug': value.slug,
        'countPlanted': value.countPlanted,
        'countPersonal': value.countPersonal,
        'countDonated': value.countDonated,
        'countRegistered': value.countRegistered,
        'countReceived': value.countReceived,
        'countTarget': value.countTarget,
        'implicitTarget': value.implicitTarget,
        'targetYear': value.targetYear,
        'followerIds': value.followerIds,
        'userProfile': UserProfileToJSON(value.userProfile),
        'countCommunity': value.countCommunity,
        'contributions': value.contributions === undefined ? undefined : ((value.contributions as Array<any>).map(ContributionToJSON)),
        'gifts': value.gifts === undefined ? undefined : ((value.gifts as Array<any>).map(GiftToJSON)),
        'countProjectDonated': value.countProjectDonated,
    };
}


