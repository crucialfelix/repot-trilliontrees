/* tslint:disable */
/* eslint-disable */
/**
 * Trillion Trees Campaign
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LeaderboardEntry
 */
export interface LeaderboardEntry {
    /**
     * 
     * @type {number}
     * @memberof LeaderboardEntry
     */
    planted: number;
    /**
     * 
     * @type {number}
     * @memberof LeaderboardEntry
     */
    target: number;
    /**
     * 
     * @type {string}
     * @memberof LeaderboardEntry
     */
    caption: string;
    /**
     * 
     * @type {string}
     * @memberof LeaderboardEntry
     */
    uri: string;
    /**
     * 
     * @type {string}
     * @memberof LeaderboardEntry
     */
    contributorType?: LeaderboardEntryContributorTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof LeaderboardEntry
     */
    treecounterId?: number;
    /**
     * 
     * @type {string}
     * @memberof LeaderboardEntry
     */
    contributorSlug?: string;
    /**
     * 
     * @type {string}
     * @memberof LeaderboardEntry
     */
    contributorAvatar?: string;
    /**
     * 
     * @type {boolean}
     * @memberof LeaderboardEntry
     */
    mayPublish?: boolean;
}

export function LeaderboardEntryFromJSON(json: any): LeaderboardEntry {
    return LeaderboardEntryFromJSONTyped(json, false);
}

export function LeaderboardEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeaderboardEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'planted': json['planted'],
        'target': json['target'],
        'caption': json['caption'],
        'uri': json['uri'],
        'contributorType': !exists(json, 'contributorType') ? undefined : json['contributorType'],
        'treecounterId': !exists(json, 'treecounterId') ? undefined : json['treecounterId'],
        'contributorSlug': !exists(json, 'contributorSlug') ? undefined : json['contributorSlug'],
        'contributorAvatar': !exists(json, 'contributorAvatar') ? undefined : json['contributorAvatar'],
        'mayPublish': !exists(json, 'mayPublish') ? undefined : json['mayPublish'],
    };
}

export function LeaderboardEntryToJSON(value?: LeaderboardEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'planted': value.planted,
        'target': value.target,
        'caption': value.caption,
        'uri': value.uri,
        'contributorType': value.contributorType,
        'treecounterId': value.treecounterId,
        'contributorSlug': value.contributorSlug,
        'contributorAvatar': value.contributorAvatar,
        'mayPublish': value.mayPublish,
    };
}

/**
* @export
* @enum {string}
*/
export enum LeaderboardEntryContributorTypeEnum {
    Organization = 'organization',
    Company = 'company',
    Individual = 'individual'
}


