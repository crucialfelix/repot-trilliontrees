/* tslint:disable */
/* eslint-disable */
/**
 * Trillion Trees Campaign
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlantProjectSummary,
    PlantProjectSummaryFromJSON,
    PlantProjectSummaryFromJSONTyped,
    PlantProjectSummaryToJSON,
} from './';

/**
 * 
 * @export
 * @interface PlantProjectPagerMergePlantProjectPager
 */
export interface PlantProjectPagerMergePlantProjectPager {
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    category?: string;
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    currentPage?: number;
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    maxPerPage?: number;
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    nbPages?: number;
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    nbResults?: number;
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    nbShowing?: number;
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    nbRemaining?: number;
    /**
     * 
     * @type {number}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    nbNextResults?: number;
    /**
     * 
     * @type {Array<PlantProjectSummary>}
     * @memberof PlantProjectPagerMergePlantProjectPager
     */
    entities?: Array<PlantProjectSummary>;
}

export function PlantProjectPagerMergePlantProjectPagerFromJSON(json: any): PlantProjectPagerMergePlantProjectPager {
    return PlantProjectPagerMergePlantProjectPagerFromJSONTyped(json, false);
}

export function PlantProjectPagerMergePlantProjectPagerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlantProjectPagerMergePlantProjectPager {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'currentPage': !exists(json, 'currentPage') ? undefined : json['currentPage'],
        'maxPerPage': !exists(json, 'maxPerPage') ? undefined : json['maxPerPage'],
        'nbPages': !exists(json, 'nbPages') ? undefined : json['nbPages'],
        'nbResults': !exists(json, 'nbResults') ? undefined : json['nbResults'],
        'nbShowing': !exists(json, 'nbShowing') ? undefined : json['nbShowing'],
        'nbRemaining': !exists(json, 'nbRemaining') ? undefined : json['nbRemaining'],
        'nbNextResults': !exists(json, 'nbNextResults') ? undefined : json['nbNextResults'],
        'entities': !exists(json, 'entities') ? undefined : ((json['entities'] as Array<any>).map(PlantProjectSummaryFromJSON)),
    };
}

export function PlantProjectPagerMergePlantProjectPagerToJSON(value?: PlantProjectPagerMergePlantProjectPager | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'category': value.category,
        'currentPage': value.currentPage,
        'maxPerPage': value.maxPerPage,
        'nbPages': value.nbPages,
        'nbResults': value.nbResults,
        'nbShowing': value.nbShowing,
        'nbRemaining': value.nbRemaining,
        'nbNextResults': value.nbNextResults,
        'entities': value.entities === undefined ? undefined : ((value.entities as Array<any>).map(PlantProjectSummaryToJSON)),
    };
}


