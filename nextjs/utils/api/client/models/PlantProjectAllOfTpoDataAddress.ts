/* tslint:disable */
/* eslint-disable */
/**
 * Trillion Trees Campaign
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlantProjectAllOfTpoDataAddress
 */
export interface PlantProjectAllOfTpoDataAddress {
    /**
     * 
     * @type {string}
     * @memberof PlantProjectAllOfTpoDataAddress
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof PlantProjectAllOfTpoDataAddress
     */
    zipCode?: string;
    /**
     * 
     * @type {string}
     * @memberof PlantProjectAllOfTpoDataAddress
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof PlantProjectAllOfTpoDataAddress
     */
    countryCode?: string;
}

export function PlantProjectAllOfTpoDataAddressFromJSON(json: any): PlantProjectAllOfTpoDataAddress {
    return PlantProjectAllOfTpoDataAddressFromJSONTyped(json, false);
}

export function PlantProjectAllOfTpoDataAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlantProjectAllOfTpoDataAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': !exists(json, 'address') ? undefined : json['address'],
        'zipCode': !exists(json, 'zipCode') ? undefined : json['zipCode'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
    };
}

export function PlantProjectAllOfTpoDataAddressToJSON(value?: PlantProjectAllOfTpoDataAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'zipCode': value.zipCode,
        'city': value.city,
        'countryCode': value.countryCode,
    };
}


